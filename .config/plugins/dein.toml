# NeoVimのプラグインマネージャー。これないとやばい
[[plugins]]
repo = 'Shougo/dein.vim'

# Lint エンジン。サイドバーの矢印とコメントでチェックしてくれる
[[plugins]]
repo = 'w0rp/ale'

# LSP. COC便利なので利用
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
build = '''
  git checkout release
'''
hook_add = '''
  inoremap <silent><expr> <TAB>
        \ pumvisible() ? coc#_select_confirm() :
        \ <SID>check_back_space() ? "\<TAB>" :
        \ coc#refresh()
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
  inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
  endfunction
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gr <Plug>(coc-references)

  nnoremap <silent> K :call <SID>show_documentation()<CR>
  function! s:show_documentation()
    if (index(['vim','help'], &filetype) >= 0)
      execute 'h '.expand('<cword>')
    elseif (coc#rpc#ready())
      call CocActionAsync('doHover')
    else
      execute '!' . &keywordprg . " " . expand('<cword>')
    endif
  endfunction

  let g:coc_global_extensions = [
  \ 'coc-solargraph',
  \ 'coc-tsserver',
  \ 'coc-prettier',
  \ 'coc-eslint',
  \ 'coc-git',
  \ 'coc-markdownlint',
  \ 'coc-pairs',
  \ 'coc-prettier',
  \ 'coc-yaml',
  \ 'coc-java',
  \ 'coc-css',
  \ 'coc-html',
  \ 'coc-sql',
  \ 'coc-pyright',
  \ 'coc-go',
  \ 'coc-json'
  \ ]
'''

# ファイル検索。regexからファイル名までいけるので必須
[[plugins]]
repo = 'junegunn/fzf'
hook_post_update = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
  nnoremap fb :Buffers<CR>
  nnoremap fg :Rg<CR>
  nnoremap ff :Files<CR>
  nnoremap fc :Commits<CR>

  let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.9 } }
  let $FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --layout reverse --margin=1,4 --preview 'bat --color=always --style=header,grid --line-range :300 {}'"
  set rtp+=/usr/local/opt/fzf
'''

# ファイラ. プロジェクトのファイル一覧の操作が可能
[[plugins]]
repo = 'preservim/nerdtree'
hook_add = '''
  let NERDTreeShowHidden=1
  nnoremap <C-t> :NERDTreeToggle<CR>
'''

# nerdtreeのfileに言語のアイコンを装飾
[[plugins]]
repo = 'ryanoasis/vim-devicons'

# nerdtreeにgit情報を付与
[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

# 作業中のブランチやファイル名、を画面の下部と上部に表示
[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = 'vim-airline'
hook_add = '''
    let g:airline#extensions#hunks#enabled = 0
    let g:airline#extensions#branch#enabled = 1
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#buffer_idx_mode = 1
'''

# 差分を左に-と+で教えてくれる
[[plugins]]
repo = "airblade/vim-gitgutter"

# Gitに関するコマンドを使うことが可能。超便利
[[plugins]]
repo = "tpope/vim-fugitive"

# 複数行のコメントいける
[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
    vnoremap ? :'<,'>TComment<CR>
'''

# 括弧に色をつけてわかりやすくしてくれる。だいじ
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
    let g:rainbow_active = 1
'''

# 簡単に括弧やクオテーションで囲める。超重要
[[plugins]]
repo = 'tpope/vim-surround'

# カッコやクオテーションの自動追加
[[plugins]]
repo = 'jiangmiao/auto-pairs'

# コード整形。使える言語限られているので、利用のタイミングは割と限定的
# [[plugins]]
# repo  = 'prettier/vim-prettier'
# build = 'npm install'

# インデントを見やすくする
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

# snippets
[[plugins]]
repo ='SirVer/ultisnips'
hook_add = '''
   let g:UltiSnipsSnippetDirectories=[$HOME.'/.config/UltiSnips']
   let g:UltiSnipsExpandTrigger       = '<c-k>'
   let g:UltiSnipsJumpForwardTrigger="<c-b>"
   let g:UltiSnipsJumpBackwardTrigger="<c-z>"
 '''

# 特定keywordで画面移動を素早く実行
[[plugins]]
repo ='easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  nmap qq <Plug>(easymotion-overwin-f)
  nmap qq <Plug>(easymotion-overwin-f2)
  let g:EasyMotion_smartcase = 1
  map <Leader>j <Plug>(easymotion-j)
  map <Leader>k <Plug>(easymotion-k)
 '''

# whitespace検出
[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# vim-testの画面を画面下部に出力させるために導入
[[plugins]]
repo = 'tpope/vim-dispatch'
hook_add = '''
let g:dispatch_quickfix_height=30
'''
# test実行を簡単にする
[[plugins]]
repo = 'vim-test/vim-test'
depends = ['vim-dispatch']
hook_add = '''
let g:test#strategy = 'dispatch'
'''

# ターミナル起動
[[plugins]]
  repo = 'kassio/neoterm'
  hook_add = '''
  let g:neoterm_autoinsert = 1
 	let g:neoterm_autoscroll = 1
 	" # let g:neoterm_split_on_tnew = 1
 	let g:neoterm_default_mod = "belowright"

  nmap <C-s> :Ttoggle<CR>
  '''
# function等をリストして右側に出してくれる。ファイルの中の関数全部一気に見れるので非常に便利
[[plugins]]
repo = 'liuchengxu/vista.vim'
depends = ['coc.nvim', 'lightline.vim']
hook_add = '''
  nnoremap <C-v> :Vista coc<CR>
  let g:vista_icon_indent = ["╰─▸ ", "├─▸ "]
  let g:vista#renderer#enable_icon = 1
  let g:vista#renderer#icons = {
  \   "function": "\uf794",
  \   "variable": "\uf71b",
  \  }
'''

# windowのサイズをtmuxのpaneみたいに変更可能
[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
  let g:winresizer_start_key = '<C-w>'
'''

[[plugins]]
repo = 'iberianpig/tig-explorer.vim'

# vim でshell起動。主にdlvのUIを整えるため、が目的
[[plugins]]
repo = 'Shougo/vimshell.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
